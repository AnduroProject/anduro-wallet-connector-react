"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/anduro-wallet-connector";
exports.ids = ["vendor-chunks/anduro-wallet-connector"];
exports.modules = {

/***/ "(ssr)/./node_modules/anduro-wallet-connector/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/anduro-wallet-connector/dist/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function(target, all) {\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = function(to, from, except, desc) {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            var _loop = function() {\n                var key = _step.value;\n                if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n                    get: function() {\n                        return from[key];\n                    },\n                    enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n                });\n            };\n            for(var _iterator = __getOwnPropNames(from)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    return to;\n};\nvar __toESM = function(mod, isNodeMode, target) {\n    return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod);\n};\nvar __toCommonJS = function(mod) {\n    return __copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n};\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n    UseConnectorProvider: function() {\n        return UseConnectorProvider;\n    },\n    useConnector: function() {\n        return useConnector;\n    }\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/hooks/useConnector.tsx\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n// src/helpers/errorMessages.tsx\nvar FAIL_PROCESS = \"Can't process your request\";\nvar ERROR_MESSAGES = {\n    walletNotConnected: \"The wallet is not connected.\",\n    transactionTypeRequired: \"\".concat(FAIL_PROCESS, \", Transaction Type is required\"),\n    transactionTypeInvalid: \"\".concat(FAIL_PROCESS, \", Invalid transaction type\"),\n    amountRequired: \"\".concat(FAIL_PROCESS, \", Amount is required\"),\n    nameRequired: \"\".concat(FAIL_PROCESS, \", Name is required\"),\n    symbolRequired: \"\".concat(FAIL_PROCESS, \", Symbol is required\"),\n    imageUrlRequired: \"\".concat(FAIL_PROCESS, \", Image Url is required\"),\n    supplyRequired: \"\".concat(FAIL_PROCESS, \", Supply is required\"),\n    assetTypeRequired: \"\".concat(FAIL_PROCESS, \", Asset Type is required\"),\n    assetTypeInvalid: \"\".concat(FAIL_PROCESS, \", Invalid Asset Type\"),\n    assetIdRequired: \"\".concat(FAIL_PROCESS, \", Asset Id is required\"),\n    receiverAddressRequired: \"\".concat(FAIL_PROCESS, \", Receiver Address is required\")\n};\n// src/helpers/handleResponse.tsx\nvar handleErrorResponse = function() {\n    var error = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n    return {\n        status: false,\n        result: null,\n        error: error\n    };\n};\nvar handleSuccessResponse = function() {\n    var result = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n    return {\n        status: true,\n        result: result,\n        error: null\n    };\n};\n// src/helpers/handleWalletWindow.tsx\nvar openWalletWindow = function(url) {\n    var _window_top, _window_top1, _window_top2, _window_top3;\n    var inputWidth = 370;\n    var inputHeight = 550;\n    var viewportwidth = document.documentElement.clientWidth;\n    var tempW = (_window_top = window.top) === null || _window_top === void 0 ? void 0 : _window_top.outerWidth;\n    var tempH = (_window_top1 = window.top) === null || _window_top1 === void 0 ? void 0 : _window_top1.outerHeight;\n    var tempSY = (_window_top2 = window.top) === null || _window_top2 === void 0 ? void 0 : _window_top2.screenY;\n    var tempSX = (_window_top3 = window.top) === null || _window_top3 === void 0 ? void 0 : _window_top3.screenX;\n    var y = tempH / 2 + tempSY - inputHeight / 2;\n    var x = tempW / 2 + tempSX - inputWidth / 2;\n    if (viewportwidth > 800) {\n        x = viewportwidth - 300;\n        y = 0;\n    }\n    return window.open(url, \"_blank\", \"toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=\".concat(inputWidth, \", height=\").concat(inputHeight, \", right=0, top=\").concat(y, \", left=\").concat(x));\n};\n// src/hooks/useConnector.tsx\nvar import_jsx_runtime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar useConnector = import_react.default.createContext(null);\nvar resolvePromise = null;\nvar UseConnectorProvider = function(props) {\n    var _ref = _sliced_to_array((0, import_react.useState)(null), 2), childWindow = _ref[0], setChildWindow = _ref[1];\n    var _ref1 = _sliced_to_array((0, import_react.useState)(), 2), requestType = _ref1[0], setRequestType = _ref1[1];\n    var _ref2 = _sliced_to_array((0, import_react.useState)({}), 2), transactionData = _ref2[0], setTransactionData = _ref2[1];\n    var _import_react_default_useState = _sliced_to_array(import_react.default.useState(null), 2), requestData = _import_react_default_useState[0], setRequestData = _import_react_default_useState[1];\n    var _import_react_default_useState1 = _sliced_to_array(import_react.default.useState({}), 2), createAssetData = _import_react_default_useState1[0], setCreateAssetData = _import_react_default_useState1[1];\n    var _import_react_default_useState2 = _sliced_to_array(import_react.default.useState({}), 2), transferAssetData = _import_react_default_useState2[0], setTransferAssetData = _import_react_default_useState2[1];\n    var _import_react_default_useState3 = _sliced_to_array(import_react.default.useState({\n        chainId: null,\n        networkType: \"\"\n    }), 2), networkState = _import_react_default_useState3[0], setNetworkState = _import_react_default_useState3[1];\n    var _import_react_default_useState4 = _sliced_to_array(import_react.default.useState({\n        accountPublicKey: \"\",\n        connectionState: \"disconnected\"\n    }), 2), walletState = _import_react_default_useState4[0], setWalletState = _import_react_default_useState4[1];\n    var _ref3 = _sliced_to_array((0, import_react.useState)(props.walletURL), 2), walletURL = _ref3[0], setWalletURL = _ref3[1];\n    (0, import_react.useEffect)(function() {\n        if (networkState.chainId === null && requestType !== \"disconnect\") {\n            var url = \"\".concat(walletURL, \"?requestType=\", \"networkinfo\" /* networkinfo */ );\n            var targetWindow = openWalletWindow(url);\n            setChildWindow(targetWindow);\n            setRequestType(\"networkinfo\" /* networkinfo */ );\n        }\n    }, [\n        networkState\n    ]);\n    (0, import_react.useEffect)(function() {\n        if (childWindow != null) {\n            window.addEventListener(\"message\", handleMessage);\n            return function() {\n                window.removeEventListener(\"message\", handleMessage);\n            };\n        }\n    }, [\n        childWindow\n    ]);\n    var handleMessage = function(event) {\n        if (!event.data.type) return false;\n        if (event.data.type == \"webpackOk\") return false;\n        if (event.data.type === \"wallet-loaded\" /* walletLoaded */ ) return handlewalletLoadedMessage();\n        if (childWindow) childWindow.close();\n        if (!event.data.status) return handleErrorResponse(event.data.error ? event.data.error : event.data);\n        switch(event.data.type){\n            case \"connection-response\" /* connectionResponse */ :\n                updateNetworkInformation(event.data.result);\n                updateWalletInformation(\"connected\", event.data.result.accountPublicKey);\n                resolvePromise(handleSuccessResponse(event.data));\n                break;\n            case \"account-not-created\" /* accountNotCreated */ :\n                if (resolvePromise) resolvePromise(handleErrorResponse(event.data));\n                break;\n            case \"networkinfo-response\" /* networkinfoResponse */ :\n                updateNetworkInformation(event.data.result);\n                updateWalletInformation(\"conneted\", event.data.result.accountPublicKey);\n                break;\n            case \"disconnect-response\" /* disconnectResponse */ :\n                updateNetworkInformation({\n                    chainId: null,\n                    networkType: \"\"\n                });\n                updateWalletInformation(\"disconnected\", \"\");\n                break;\n            default:\n                if (resolvePromise) resolvePromise(handleSuccessResponse(event.data));\n                break;\n        }\n    };\n    var handlewalletLoadedMessage = function() {\n        if (requestType === \"connect\" /* connect */  || requestType === \"disconnect\" /* disconnected */ ) {\n            sendMessageToChildWindow({\n                requestType: requestType,\n                siteurl: window.location.origin,\n                chainId: requestData ? requestData.chainId : 0\n            });\n        } else if (requestType === \"networkinfo\" /* networkinfo */ ) {\n            sendMessageToChildWindow({\n                requestType: requestType,\n                siteurl: window.location.origin\n            });\n        } else if (requestType === \"send\" /* send */ ) {\n            sendMessageToChildWindow({\n                requestType: requestType,\n                transactionType: transactionData.transactionType,\n                amount: transactionData.amount,\n                receiverAddress: transactionData.receiverAddress,\n                feerate: transactionData.feeRate,\n                chainId: networkState.chainId\n            });\n        } else if (requestType === \"create-asset\" /* createAsset */ ) {\n            var formValues = {\n                headline: createAssetData.name,\n                imageUrl: createAssetData.imageUrl,\n                supply: createAssetData.supply,\n                imagebase64Data: {\n                    data: \"\",\n                    type: \"\"\n                },\n                symbol: createAssetData.symbol\n            };\n            sendMessageToChildWindow({\n                requestType: requestType,\n                transactionType: createAssetData.transactionType,\n                formValues: formValues,\n                assetType: createAssetData.assetType,\n                properties: createAssetData.properties,\n                chainId: networkState.chainId,\n                supply: createAssetData.supply,\n                receiverAddress: createAssetData.receiverAddress,\n                assetId: createAssetData.assetId\n            });\n        } else if (requestType === \"transfer-asset\" /* transferAsset */ ) {\n            sendMessageToChildWindow({\n                requestType: requestType,\n                chainId: networkState.chainId,\n                supply: transferAssetData.supply,\n                receiverAddress: transferAssetData.receiverAddress,\n                assetId: transferAssetData.assetId\n            });\n        }\n    };\n    var sendMessageToChildWindow = function(data) {\n        childWindow.postMessage(data, \"*\");\n    };\n    var updateNetworkInformation = function(params) {\n        setNetworkState({\n            chainId: params.chainId,\n            networkType: params.networkType\n        });\n    };\n    var updateWalletInformation = function(connectionState, accountPublicKey) {\n        setWalletState({\n            accountPublicKey: accountPublicKey,\n            connectionState: connectionState\n        });\n    };\n    var connect = function() {\n        var _ref = _async_to_generator(function(params) {\n            return _ts_generator(this, function(_state) {\n                return [\n                    2,\n                    new Promise(function(resolve) {\n                        var url = \"\".concat(walletURL, \"?requestType=\", \"connect\" /* connect */ );\n                        var childWindow2 = openWalletWindow(url);\n                        setWalletURL(walletURL);\n                        setRequestType(\"connect\" /* connect */ );\n                        setChildWindow(childWindow2);\n                        setRequestData({\n                            chainId: params.chainId\n                        });\n                        updateWalletInformation(\"connecting\", \"\");\n                        resolvePromise = resolve;\n                    })\n                ];\n            });\n        });\n        return function connect(params) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var disconnect = function() {\n        return new Promise(function(resolve) {\n            var url = \"\".concat(walletURL, \"?requestType=\", \"disconnect\" /* disconnected */ );\n            var childWindow2 = openWalletWindow(url);\n            setRequestType(\"disconnect\" /* disconnected */ );\n            setChildWindow(childWindow2);\n            updateWalletInformation(\"disconnecting\", \"\");\n            resolvePromise = resolve;\n        });\n    };\n    var send = function(params) {\n        if (!params.transactionType) return handleErrorResponse(ERROR_MESSAGES.transactionTypeRequired);\n        if (!params.amount) return handleErrorResponse(ERROR_MESSAGES.amountRequired);\n        if (!validateSendTransactionType(params.transactionType)) return handleErrorResponse(ERROR_MESSAGES.transactionTypeInvalid);\n        return new Promise(function(resolve) {\n            if (checkWalletConnection(resolve, \"\") && params.transactionType) {\n                var url = \"\".concat(walletURL, \"?requestType=\", \"send\" /* send */ );\n                var childWindow2 = openWalletWindow(url);\n                setRequestType(\"send\" /* send */ );\n                setChildWindow(childWindow2);\n                setTransactionData(params);\n                resolvePromise = resolve;\n            }\n        });\n    };\n    var checkWalletConnection = function(resolve, transactionType) {\n        var status = true;\n        var error = null;\n        if (networkState.chainId === null || networkState.networkType === \"\") {\n            status = false;\n            error = ERROR_MESSAGES.walletNotConnected;\n        } else if (transactionType && networkState.networkType === \"bitcoin\" /* bitcoin */ ) {\n            status = false;\n            error = ERROR_MESSAGES.transactionTypeInvalid;\n        }\n        if (!status) {\n            resolve({\n                status: status,\n                result: null,\n                error: error\n            });\n        }\n        return status;\n    };\n    var validateSendTransactionType = function(transactionType) {\n        var status = false;\n        if (transactionType === \"normal\" /* normal */ ) {\n            status = true;\n        } else if (transactionType === \"pegin\" /* pegin */ ) {\n            status = networkState.networkType === \"bitcoin\" /* bitcoin */ ;\n        } else if (transactionType === \"pegout\" /* pegout */ ) {\n            status = networkState.networkType === \"sidechain\" /* sidechain */ ;\n        }\n        return status;\n    };\n    var createasset = function(params) {\n        if (!params.transactionType) return handleErrorResponse(ERROR_MESSAGES.transactionTypeRequired);\n        if (!params.name) return handleErrorResponse(ERROR_MESSAGES.nameRequired);\n        if (!params.symbol) return handleErrorResponse(ERROR_MESSAGES.symbolRequired);\n        if (!params.imageUrl) return handleErrorResponse(ERROR_MESSAGES.imageUrlRequired);\n        if (!params.supply) return handleErrorResponse(ERROR_MESSAGES.supplyRequired);\n        if (params.assetType === void 0 || params.assetType === null) return handleErrorResponse(ERROR_MESSAGES.assetTypeRequired);\n        return new Promise(function(resolve) {\n            if (params.transactionType && checkWalletConnection(resolve, params.transactionType)) {\n                var url = \"\".concat(walletURL, \"?requestType=\", \"create-asset\" /* createAsset */ );\n                var childWindow2 = openWalletWindow(url);\n                setRequestType(\"create-asset\" /* createAsset */ );\n                setChildWindow(childWindow2);\n                setCreateAssetData(params);\n                resolvePromise = resolve;\n            }\n        });\n    };\n    var transferasset = function(params) {\n        if (!params.assetId) return handleErrorResponse(ERROR_MESSAGES.assetIdRequired);\n        if (!params.receiverAddress) return handleErrorResponse(ERROR_MESSAGES.receiverAddressRequired);\n        if (!params.supply) return handleErrorResponse(ERROR_MESSAGES.supplyRequired);\n        return new Promise(function(resolve) {\n            if (checkWalletConnection(resolve, \"transfer\")) {\n                var url = \"\".concat(walletURL, \"?requestType=\", \"transfer-asset\" /* transferAsset */ );\n                var childWindow2 = openWalletWindow(url);\n                setRequestType(\"transfer-asset\" /* transferAsset */ );\n                setChildWindow(childWindow2);\n                setTransferAssetData(params);\n                resolvePromise = resolve;\n            }\n        });\n    };\n    var children = props.children;\n    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(useConnector.Provider, {\n        value: {\n            walletState: walletState,\n            networkState: networkState,\n            connect: connect,\n            disconnect: disconnect,\n            send: send,\n            createasset: createasset,\n            transferasset: transferasset\n        },\n        children: children\n    });\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/anduro-wallet-connector/dist/index.js\n");

/***/ })

};
;